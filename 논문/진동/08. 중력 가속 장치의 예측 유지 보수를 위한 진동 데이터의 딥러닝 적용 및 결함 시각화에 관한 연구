-논문제목 : A Study on Deep Learning Application of Vibration Data and Visualization of Defects for Predictive Maintenance of Gravity Acceleration Equipment 
            ( 중력 가속 장치의 예측 유지 보수를 위한 진동 데이터의 딥러닝 적용 및 결함 시각화에 관한 연구 )
-논문 저자 : SeonWoo Lee, HyeonTak Yu, HoJun Yang, InSeo Song, JungMu Choi, JaeHeung Yang, GangMin Lim, Kyu-Sung Kim, ByeongKeun Choi and JangWoo Kwon
-URL : https://doi.org/10.3390/app11041564

-논문 선정 이유 : 진동 데이터 전처리에 대한 논문을 살펴봤을때 중복적으로 많이 사용된 STFT의 사례를 알아보기 위해


* STFT?

- 데이터에서 시간에 대해 구간을 짧게 나누어 나누어진 여러 구간의 데이터를 각각 푸리에 변환하는 방법.
- 필요성 : 신호에 대해 자신이 알고 싶은 시점에서의 주파수 성분을 알 수 있음.
- Window length, Overlap 등에 문제점 존재.

- (참고1) https://m.blog.naver.com/vmv-tech/220936084562
- (참고2) https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&blogId=vmv-tech&logNo=220941821088


[ 초록 ]
-초중력 가속기 : 중력 훈련이나 의학 연구에 사용되는 일종의 대형 기계
-이러한 대형 장비의 고장은 안전 및 비용 측면에서 심각한 문제가 될 수 있으므로, 본 논문에서는 초중력 가속기에서 발생할 수 있는 고장을 사전에 예방할 수 있는 예측모델을 제안함.
-베어링 하우징(rotor)에 4채널 가속도계를 부착 -> 측정값을 샘플링하여 시간-진폭 데이터를 얻음.

                  <!> 진폭(amplitude)에 대한 데이터라는 점에서 TBL 데이터와 차이 존재.
                  <?> rotor : 회전기(전동기, 발전기 등)의 회전하는 부분
                  
-진동신호를 STFT 또는 MFCC spectrogram으로 변환하여 딥러닝 모델에 적용함.

[ 1. 소개 ]

-중력가속장치의 주요 이슈 중 하나는 고속회전으로 인한 기계고장 발생 시 이상진동이 발생한다는 점. 
-중력가속장치의 회전부에서 발생하는 미세한 진동이 증폭되어 고속으로 회전하는 축에 손상을 주어 중대사고의 원인이 될 수 있음.

-기존의 feature 기반의 머신러닝 방법은 성능 향상의 제한이 있음.
-DNN은 좋은 성능을 가지고 있으나, 많은 hidden layer의 파라미터로 인해 결함 부위의 특성을 설명하기 어려움.

-이러한 기계적 고장을 사전에 예방하기 위해 기계에서 발생할 수 있는 진동을 모니터링하고 시각화 할 수 있는 예방정비 모델을 제안함.

-본 연구에서 제안한 3가지
  1) 진동 데이터를 2차원 데이터로 변환 ( 주기가 일정한 시간-진폭 데이터 -> spectrogram )
  2) 전처리된 데이터를 심층 신경망 모델에 적용하여 기존의 머신러닝 모델에서 얻은 결과와 비교
  3) CAM(Class Activation Map)을 사용하여 각 class를 나타내는 영역, fault score(오류 점수) 표현

[ 2.1. 실험용 회전 장비의 설계 및 제작 ]

- Pulse 3560C와 4개의 가속도계(B&K 4371)를 이용하여 회전 및 진동 데이터를 획득
- 데이터 획득 시간 : 30초
- 센서는 모터와 로터의 수직 및 축 방향 위치에서 측정

- 본 실험에서는 회전 장치의 대표적인 4가지 조건(Normal,Unbalance,Misalignment,Shaft rubbing)을 모사하여 고장 모사를 수행함.
- 즉, 인위적으로 각 유형별 고장이 발생할 환경을 조성하여 데이터를 측정함.

( sampling )
- 얻어진 신호의 sampling rate : 65,536HZ
- 30초 동안 측정됨 -> (측정환경을 고려하여) 0.48초 단위를 하나의 dataset으로 가정함. 
- 머신러닝은 하나의 dataset을 14개의 sample로 나누어 수행함.
- 진동 신호, 고장 신호가 대부분 주기성을 갖기 때문에 샘플링을 수행했음. -> 샘플링은 각 조건의 일관성과 연속성을 검사하는데 사용됨.
- 샘플링을 위한 신호 분할은 로터의 회전 주파수를 기반으로 함. -> 실험 데이터 샘플의 길이는 0.06초로 설정

           <?> sampling에 대한 이해 부족

- 훈련 데이터와 테스트 데이터의 총 개수는 1056개였으며, 훈련 데이터셋에 80%, 테스트 데이터셋에 20%를 할당함.


[ 2.2 제안 방법 ]

- 기존의 머신 러닝 방식
   1) 사람에 의해 feature 선정
   2) feature 차원 축소
   3) SVM or MLP 적용
   4) 시각화를 통한 원인분석
   
- 본 연구에서 제안된 방식
   1) STFT or MFCC를 통해 전처리한 신호를 spectrogram으로 시각화 ( 1차원 -> 2차원 )
   2) Transfer learning을 통해 2차원 기반 딥러닝 모델을 학습
   3) CAM을 적용 -> 결함 점수를 계산 및 가시화 -> 등급별 원인 분석 가능
   
       <?> Transfer learning ( 전이학습 ) : 기존에 만들어진 모델과, 그 모델이 학습한 weights를 그대로 가져와 일부 layer를 추가하여 학습하는 방법
       <?> CAM(Class Activation Map) : CNN 모델이 이미지를 분류할 때, 이미지의 어떤 부분을 보고 해당 class로 예측했는지 시각화하는 방법
       
       
- 본 연구에서 제안하는 딥러닝 네트워크

    ` 본 연구의 딥러닝 신경망 아키텍처는 VGG19를 기반으로 함.
                <?> VGG19 : 3 × 3 convolutional layer만을 사용하기 때문에 구현 및 수정이 비교적 용이하여 기본적인 딥러닝 기법으로 널리 사용되는 모델
    ` 본 연구에서는 VGG19에서 FCL(Fully Connected Layer)을 제거하고 출력 레이어와 일치시키기 위해 GAP(Global Average Pooling)를 사용하여 매개변수의 수를 줄임.
    
    ` 훈련 데이터로 사용한 Figure6, Figure7은 실험에 사용하기 전에 정사각형으로 변환 진행.
    ` 학습 오차의 수렴을 위해 매 epoch마다 학습률을 변경하는 학습 스케줄러 사용.
    ` 이외 hyperparameter는 Table2 참고.

- 결함 점수

    ` 본 논문에서는 CAM을 사용하여 결함 점수를 계산하고 시각화하기 위해 GAP(Global Average Pooling) 계층을 나중에 적용
    ` CAM을 이용하여 딥러닝 모델이 이미지의 어느 부분을 보고 클래스를 결정했는지 특성을 확인할 수 있음.
    ` 결함 점수 계산 방정식 기재되어 있음.
    
    
[ 3. 실험 결과 ] 

3-1. 성능 평가

( Table 3 )
- 전처리 방법 STFT, MFCC 를 실시했을 경우 모두 성능은 우수하며 
  두 방법에 따른 성능 차이는 거의 없음. 

( Table 4 )
- 머신러닝 방법보다 딥러닝 방법이 성능이 우수함.
- 다른 딥러닝 알고리즘과 본 연구에서 제안한 알고리즘 비교
   -> 성능이 우수하고, parameter 수도 비교적에 적은 편에 속함. ( FCL 제거 때문 )


3-2. 고장 원인 시각화

- Figure 9 : (위) test data의 CAM 결과 시각화
               (아래) input image의 평균 시각화
- CAM 결과를 보면, 정상 class와 결함 class의 차이가 확연히 드러남.


3-3. Fault Score(결함 점수) 변동

- Fault Score는 Figure 11과 같은 분포를 가짐.
- 결함 점수 값에 따라 이미지 클래스의 정상과 비정상을 식별할 수 있음.



[ 4. 결론 및 향후 과제 ]

- 본 연구에서 제안한 방법의 한계
  1) 고장 데이터의 패턴을 미리 준비해야 함.
  2) 훈련에 상당한 시간이 걸리고, GPU와 같은 추가 하드웨어가 필요함.
  -> 소형 에지 장치에서 사용될 수 있도록 계산 비용을 줄일 수 있는 방법이 필요함.  

